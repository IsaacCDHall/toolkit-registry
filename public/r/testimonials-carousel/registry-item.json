{
  "name": "testimonials-carousel",
  "type": "registry:component",
  "title": "Testimonials Carousel",
  "description": "Interactive carousel to showcase customer testimonials, reviews and ratings",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "name": "testimonials-carousel.tsx",
      "path": "registry/restaurant-components/testimonials/testimonials-carousel.tsx",
      "content": "import React, { useState, useEffect } from \"react\";\nimport { ChevronLeft, ChevronRight, Star, StarHalf } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface TestimonialItem {\n  id: string;\n  author: string;\n  role?: string;\n  content: string;\n  rating?: number; // Out of 5\n  image?: {\n    url: string;\n    alt: string;\n  };\n  date?: string;\n}\n\nexport interface TestimonialsCarouselProps {\n  testimonials: TestimonialItem[];\n  autoplay?: boolean;\n  autoplaySpeed?: number;\n  showDots?: boolean;\n  showArrows?: boolean;\n  variant?: \"light\" | \"dark\" | \"branded\";\n  className?: string;\n  titleText?: string;\n}\n\nexport function TestimonialsCarousel({\n  testimonials,\n  autoplay = true,\n  autoplaySpeed = 5000,\n  showDots = true,\n  showArrows = true,\n  variant = \"light\",\n  className,\n  titleText = \"What Our Guests Say\",\n}: TestimonialsCarouselProps) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n\n  // Handle auto-rotation\n  useEffect(() => {\n    if (!autoplay || isPaused || testimonials.length <= 1) return;\n\n    const interval = setInterval(() => {\n      setCurrentIndex((prevIndex) => (prevIndex + 1) % testimonials.length);\n    }, autoplaySpeed);\n\n    return () => clearInterval(interval);\n  }, [autoplay, autoplaySpeed, isPaused, testimonials.length]);\n\n  const goToNext = () => {\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % testimonials.length);\n  };\n\n  const goToPrevious = () => {\n    setCurrentIndex((prevIndex) =>\n      prevIndex === 0 ? testimonials.length - 1 : prevIndex - 1\n    );\n  };\n\n  const goToSlide = (index: number) => {\n    setCurrentIndex(index);\n  };\n\n  // Generate star rating display\n  const renderStars = (rating: number) => {\n    const stars = [];\n    const fullStars = Math.floor(rating);\n    const hasHalfStar = rating % 1 >= 0.5;\n\n    // Add full stars\n    for (let i = 0; i < fullStars; i++) {\n      stars.push(\n        <Star\n          key={`full-${i}`}\n          className=\"fill-yellow-400 text-yellow-400 w-5 h-5\"\n        />\n      );\n    }\n\n    // Add half star if needed\n    if (hasHalfStar) {\n      stars.push(\n        <StarHalf\n          key=\"half\"\n          className=\"fill-yellow-400 text-yellow-400 w-5 h-5\"\n        />\n      );\n    }\n\n    // Add empty stars to complete 5\n    const emptyStars = 5 - Math.ceil(rating);\n    for (let i = 0; i < emptyStars; i++) {\n      stars.push(<Star key={`empty-${i}`} className=\"text-gray-300 w-5 h-5\" />);\n    }\n\n    return stars;\n  };\n\n  // Variant styling\n  const variantClasses = {\n    light: \"bg-white text-gray-800\",\n    dark: \"bg-gray-900 text-white\",\n    branded: \"bg-amber-50 text-amber-900\",\n  };\n\n  if (!testimonials.length) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        \"w-full py-12 px-4 relative\",\n        variantClasses[variant],\n        className\n      )}\n      onMouseEnter={() => setIsPaused(true)}\n      onMouseLeave={() => setIsPaused(false)}\n    >\n      {/* Title */}\n      {titleText && (\n        <h2 className=\"text-3xl font-serif text-center mb-10\">{titleText}</h2>\n      )}\n\n      {/* Testimonial carousel */}\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"relative h-full\">\n          {/* Navigation arrows */}\n          {showArrows && testimonials.length > 1 && (\n            <>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"absolute left-0 top-1/2 -translate-y-1/2 z-10 rounded-full bg-white/20 backdrop-blur-sm hover:bg-white/30 -ml-4\"\n                onClick={goToPrevious}\n                aria-label=\"Previous testimonial\"\n              >\n                <ChevronLeft className=\"h-6 w-6\" />\n              </Button>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"absolute right-0 top-1/2 -translate-y-1/2 z-10 rounded-full bg-white/20 backdrop-blur-sm hover:bg-white/30 -mr-4\"\n                onClick={goToNext}\n                aria-label=\"Next testimonial\"\n              >\n                <ChevronRight className=\"h-6 w-6\" />\n              </Button>\n            </>\n          )}\n\n          {/* Testimonial cards */}\n          <div className=\"overflow-hidden\">\n            <div className=\"transition-transform duration-500 ease-in-out\">\n              <div className=\"px-8 sm:px-12 md:px-16\">\n                <div className=\"flex flex-col items-center text-center\">\n                  {/* Author image */}\n                  {testimonials[currentIndex].image && (\n                    <div className=\"mb-6\">\n                      <img\n                        src={testimonials[currentIndex].image.url}\n                        alt={\n                          testimonials[currentIndex].image.alt ||\n                          testimonials[currentIndex].author\n                        }\n                        className=\"w-20 h-20 rounded-full object-cover border-2 border-amber-300\"\n                      />\n                    </div>\n                  )}\n\n                  {/* Rating */}\n                  {testimonials[currentIndex].rating && (\n                    <div className=\"flex items-center mb-4\">\n                      {renderStars(testimonials[currentIndex].rating)}\n                    </div>\n                  )}\n\n                  {/* Content */}\n                  <blockquote className=\"text-xl italic mb-5\">\n                    &ldquo;{testimonials[currentIndex].content}&rdquo;\n                  </blockquote>\n\n                  {/* Author */}\n                  <cite className=\"not-italic font-semibold block\">\n                    {testimonials[currentIndex].author}\n                  </cite>\n\n                  {/* Role/title */}\n                  {testimonials[currentIndex].role && (\n                    <span className=\"text-sm opacity-75\">\n                      {testimonials[currentIndex].role}\n                    </span>\n                  )}\n\n                  {/* Date */}\n                  {testimonials[currentIndex].date && (\n                    <span className=\"text-xs opacity-60 mt-1\">\n                      {testimonials[currentIndex].date}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Dot indicators */}\n          {showDots && testimonials.length > 1 && (\n            <div className=\"flex justify-center mt-6 space-x-2\">\n              {testimonials.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => goToSlide(index)}\n                  className={`h-2 w-2 rounded-full transition-all ${\n                    currentIndex === index\n                      ? \"bg-amber-500 w-4\"\n                      : \"bg-gray-300 hover:bg-gray-400\"\n                  }`}\n                  aria-label={`Go to testimonial ${index + 1}`}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "name": "testimonials-utils.ts",
      "path": "registry/restaurant-components/testimonials/testimonials-utils.ts",
      "content": "import { TestimonialItem } from \"./testimonials-carousel\";\n\n/**\n * Generate sample restaurant testimonials data for demonstration purposes\n *\n * @param count Number of testimonials to generate\n * @returns Array of TestimonialItem objects\n */\nexport function getSampleTestimonials(count: number = 4): TestimonialItem[] {\n  const sampleTestimonials: TestimonialItem[] = [\n    {\n      id: \"t1\",\n      author: \"Sarah Johnson\",\n      role: \"Food Critic\",\n      content:\n        \"The tasting menu was a revelation. Each dish told a story of local ingredients and global inspiration.\",\n      rating: 5,\n      image: {\n        url: \"https://images.unsplash.com/photo-1494790108377-be9c29b29330\",\n        alt: \"Sarah Johnson profile photo\",\n      },\n      date: \"March 15, 2023\",\n    },\n    {\n      id: \"t2\",\n      author: \"Michael Chen\",\n      role: \"Local Diner\",\n      content:\n        \"We celebrated our anniversary here and the staff made it unforgettable. The wine pairing was exceptional.\",\n      rating: 4.5,\n      date: \"January 20, 2023\",\n    },\n    {\n      id: \"t3\",\n      author: \"Emma Williams\",\n      role: \"Food Blogger\",\n      content:\n        \"The seasonal menu showcases incredible attention to detail. Their commitment to local farmers shines through in every bite.\",\n      rating: 5,\n      image: {\n        url: \"https://images.unsplash.com/photo-1534528741775-53994a69daeb\",\n        alt: \"Emma Williams profile photo\",\n      },\n      date: \"February 2, 2023\",\n    },\n    {\n      id: \"t4\",\n      author: \"David Rodriguez\",\n      content:\n        \"Best dining experience in the city! The ambiance is perfect for special occasions.\",\n      rating: 4,\n      date: \"December 15, 2022\",\n    },\n    {\n      id: \"t5\",\n      author: \"Olivia Lee\",\n      role: \"First-time Guest\",\n      content:\n        \"From the moment we walked in, the service was impeccable. Can't wait to return for the seasonal menu change.\",\n      rating: 5,\n      date: \"April 8, 2023\",\n    },\n    {\n      id: \"t6\",\n      author: \"James Thompson\",\n      role: \"Regular Patron\",\n      content:\n        \"I've been dining here for years and the consistency is remarkable. The new chef's additions to the menu are brilliant.\",\n      rating: 4.5,\n      image: {\n        url: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d\",\n        alt: \"James Thompson profile photo\",\n      },\n      date: \"May 30, 2023\",\n    },\n  ];\n\n  // Return requested number of testimonials\n  return sampleTestimonials.slice(\n    0,\n    Math.min(count, sampleTestimonials.length)\n  );\n}\n\n/**\n * Interface representing the structure of Prismic testimonial data\n */\ninterface PrismicTestimonialData {\n  id?: string;\n  data?: {\n    author_name?: { text?: string };\n    author_role?: { text?: string };\n    testimonial_text?: { text?: string };\n    rating?: string | number;\n    author_image?: {\n      url?: string;\n      alt?: string;\n    };\n    date?: string;\n  };\n}\n\n/**\n * Format Prismic testimonials data to match component structure\n *\n * @param prismicData Raw data from Prismic CMS\n * @returns Formatted testimonials array\n */\nexport function formatPrismicTestimonials(\n  prismicData: PrismicTestimonialData[]\n): TestimonialItem[] {\n  if (!prismicData || !Array.isArray(prismicData)) {\n    return [];\n  }\n\n  return prismicData.map((item, index) => ({\n    id: item.id || `testimonial-${index}`,\n    author: item.data?.author_name?.text || \"Anonymous\",\n    role: item.data?.author_role?.text || undefined,\n    content: item.data?.testimonial_text?.text || \"\",\n    rating: item.data?.rating\n      ? parseFloat(String(item.data.rating)) || undefined\n      : undefined,\n    image: item.data?.author_image?.url\n      ? {\n          url: item.data.author_image.url,\n          alt:\n            item.data.author_image.alt ||\n            `${item.data?.author_name?.text || \"Anonymous\"}'s photo`,\n        }\n      : undefined,\n    date: item.data?.date\n      ? new Date(item.data.date).toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n        })\n      : undefined,\n  }));\n}\n",
      "type": "registry:lib"
    },
    {
      "name": "testimonials-demo.tsx",
      "path": "registry/restaurant-components/testimonials/testimonials-demo.tsx",
      "content": "import React from \"react\";\nimport { TestimonialsCarousel } from \"./testimonials-carousel\";\nimport { getSampleTestimonials } from \"./testimonials-utils\";\n\nexport interface TestimonialsDemoProps {\n  variant?: \"light\" | \"dark\" | \"branded\";\n  testimonialCount?: number;\n  titleText?: string;\n}\n\nexport function TestimonialsDemo({\n  variant = \"branded\",\n  testimonialCount = 4,\n  titleText = \"What Our Guests Are Saying\",\n}: TestimonialsDemoProps) {\n  // Get sample testimonials data\n  const testimonials = getSampleTestimonials(testimonialCount);\n\n  return (\n    <div className=\"w-full\">\n      <TestimonialsCarousel\n        testimonials={testimonials}\n        variant={variant}\n        titleText={titleText}\n        autoplay={true}\n        autoplaySpeed={5000}\n        showDots={true}\n        showArrows={true}\n      />\n\n      {/* Component usage example code */}\n      <div className=\"mt-8 border-t pt-8 px-4 max-w-4xl mx-auto\">\n        <h3 className=\"text-lg font-medium mb-2\">Component Usage Example</h3>\n        <pre className=\"bg-gray-100 p-4 rounded text-sm overflow-x-auto\">\n          {`// Import the component\nimport { TestimonialsCarousel } from \"@/components/testimonials-carousel\";\n\n// Define your testimonials data\nconst testimonials = [\n  {\n    id: \"1\",\n    author: \"Jane Smith\",\n    role: \"Food Critic\",\n    content: \"Exceptional dining experience with outstanding service.\",\n    rating: 5\n  },\n  // More testimonials...\n];\n\n// Use the component in your page\nexport default function TestimonialsSection() {\n  return (\n    <TestimonialsCarousel\n      testimonials={testimonials}\n      variant=\"branded\"\n      titleText=\"Guest Testimonials\"\n    />\n  );\n}`}\n        </pre>\n      </div>\n\n      {/* Prismic integration example */}\n      <div className=\"mt-8 border-t pt-8 px-4 max-w-4xl mx-auto\">\n        <h3 className=\"text-lg font-medium mb-2\">\n          Prismic Integration Example\n        </h3>\n        <pre className=\"bg-gray-100 p-4 rounded text-sm overflow-x-auto\">\n          {`import { createClient } from \"@prismicio/client\";\nimport { TestimonialsCarousel } from \"@/components/testimonials-carousel\";\nimport { formatPrismicTestimonials } from \"@/lib/testimonials-utils\";\n\n// Fetch data from Prismic\nexport async function getStaticProps() {\n  const client = createClient(/* your Prismic config */);\n  const testimonialData = await client.getAllByType(\"testimonial\");\n  \n  return {\n    props: {\n      testimonials: formatPrismicTestimonials(testimonialData)\n    }\n  };\n}\n\nexport default function TestimonialsPage({ testimonials }) {\n  return (\n    <TestimonialsCarousel\n      testimonials={testimonials}\n      variant=\"dark\"\n    />\n  );\n}`}\n        </pre>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}